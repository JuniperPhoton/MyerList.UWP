<base:BindablePage
    x:Class="MyerListUWP.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyerListUWP.View"
    xmlns:uc="using:MyerList.UC"
    xmlns:base="using:MyerList.Base"
    xmlns:attach="using:JP.Utils.Framework"
    xmlns:cc="using:MyerListCustomControl"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:triggers="using:JP.CustomTriggers"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding MainVM,Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="GlobalPageKeyDown">
            <attach:InvokeCommandByKeyDown Command="{x:Bind MainVM.OkCommand}" PressedKey="Enter" />
            <attach:InvokeCommandByKeyDown Command="{x:Bind MainVM.SyncCommand}" PressedKey="F5" />
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>
    <base:BindablePage.Resources>
        <Storyboard x:Name="ChangeColorStory">
            <ColorAnimation x:Name="ChangeColorAnim" To="White" From="White" Duration="0:0:0.2" Storyboard.TargetName="HeaderContentRootGrid" Storyboard.TargetProperty="(DeleteCommandBar.Background).(SolidColorBrush.Color)"/>
        </Storyboard>
        <Storyboard x:Name="AddStory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="AddingPanel">
                <EasingDoubleKeyFrame KeyTime="0" x:Name="AddingPaneFirstOffset" Value="-400"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ListGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AddingPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AddingPanel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0">
                    <DiscreteObjectKeyFrame.Value>Visible</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>Visible</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ListGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-200"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DefaultCommandBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="100"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ListGrid">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="RemoveStory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="AddingPanel">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" x:Name="AddingPaneLastOffset" Value="-400">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AddingPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AddingPanel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0">
                    <DiscreteObjectKeyFrame.Value>Visible</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>Collapsed</DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ListGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="-200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-96.9843"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ListGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.494476"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DefaultCommandBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ListGrid">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="SlideInStory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Drawer">
                <EasingDoubleKeyFrame x:Name="SlideInKey1" KeyTime="0" Value="-260"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MaskBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" x:Name="SlideInKey2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.8"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="SlideOutStory">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Drawer">
                <SplineDoubleKeyFrame KeyTime="0" x:Name="SlideOutKey1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-260">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MaskBorder">
                <EasingDoubleKeyFrame KeyTime="0" x:Name="SlideOutKey2" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Drawer" d:IsOptimized="True"/>
        </Storyboard>
        <Storyboard x:Name="SwitchCommandBarToDelete">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DefaultCommandBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DeleteCommandBar">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="SwitchCommandBarToDefault">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DefaultCommandBar">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="DeleteCommandBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <x:Double x:Key="MaxWidth">1500</x:Double>
    </base:BindablePage.Resources>
    <Grid Background="White">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!--Narrow-->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                    <Storyboard>
                        <ColorAnimation To="{StaticResource CommandBarGrey}" Duration="0:0:0.2" Storyboard.TargetName="DeleteCommandBar" Storyboard.TargetProperty="(DeleteCommandBar.Background).(SolidColorBrush.Color)"/>
                        <ColorAnimation To="{StaticResource CommandBarGrey}" Duration="0:0:0.2" Storyboard.TargetName="DefaultCommandBar" Storyboard.TargetProperty="(DefaultCommandBar.Background).(SolidColorBrush.Color)"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Drawer">
                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-260">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ColorAnimation Duration="0" To="Black" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Drawer" d:IsOptimized="True"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="HamburgerBtn">
                            <SplineDoubleKeyFrame KeyTime="0" Value="-30"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TitleTB">
                            <SplineDoubleKeyFrame KeyTime="0" Value="-30"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ProgressRing">
                            <SplineDoubleKeyFrame KeyTime="0" Value="-30"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HamburgerBtn">
                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="HamburgerBtn">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState>
                    <!--Wide-->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                    <Storyboard>
                        <ColorAnimation To="White" Duration="0:0:0.2" Storyboard.TargetName="DeleteCommandBar" Storyboard.TargetProperty="(DeleteCommandBar.Background).(SolidColorBrush.Color)"/>
                        <ColorAnimation To="White" Duration="0:0:0.2" Storyboard.TargetName="DefaultCommandBar" Storyboard.TargetProperty="(DefaultCommandBar.Background).(SolidColorBrush.Color)"/>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Drawer">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-260"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="HamburgerBtn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-30"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TitleTB">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-30"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="ProgressRing">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-30"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HamburgerBtn">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="HamburgerBtn">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="True"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="False"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyTrigger DeviceFamily="Windows.Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayedListView.MaxWidth" Value="{StaticResource MaxWidth}"/>
                        <Setter Target="HeaderContentGrid.MaxWidth" Value="{StaticResource MaxWidth}"/>
                        <Setter Target="DeleteListView.MaxWidth" Value="{StaticResource MaxWidth}"/>
                        <!--<Setter Target="HamburgerBtn.ForegroundBrush" Value="{x:Bind MainVM.CateColor,Mode=OneWay}"/>
                        <Setter Target="TitleTB.Foreground" Value="{x:Bind MainVM.CateColor,Mode=OneWay}"/>-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyTrigger DeviceFamily="Windows.Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DeleteListView.MaxWidth" Value="450"/>
                        <Setter Target="DisplayedListView.MaxWidth" Value="450"/>
                        <Setter Target="HeaderContentGrid.MaxWidth" Value="450"/>

                        <!--<Setter Target="HeaderContentRootGrid.Background" Value="{x:Bind MainVM.CateColor,Mode=OneWay}"/>-->
                        <!--<Setter Target="HamburgerBtn.ForegroundBrush" Value="White"/>
                        <Setter Target="TitleTB.Foreground" Value="White"/>-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="ContentRootGird" Background="White" Grid.Column="1" Margin="0 -30 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="170"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderContentRootGrid">
                <Grid.Background>
                    <SolidColorBrush Color="White"/>
                </Grid.Background>
                <Grid x:Name="HeaderContentGrid" MaxWidth="450" VerticalAlignment="Bottom" Margin="0,0,0,20">
                    <StackPanel Orientation="Horizontal">
                        <uc:HamburgerButton x:Name="HamburgerBtn" ForegroundBrush="Black" ButtonClick="HamClick" Margin="5,0,0,0" RenderTransformOrigin="0.5,0.5" Background="Transparent">
                            <uc:HamburgerButton.RenderTransform>
                                <CompositeTransform/>
                            </uc:HamburgerButton.RenderTransform>
                        </uc:HamburgerButton>
                        <cc:AnimatedTextBlock x:Name="TitleTB" TextContent="{x:Bind MainVM.Title,Mode=OneWay}" Foreground="Black" VerticalAlignment="Center" FontSize="27" Margin="5,0,0,0" HorizontalAlignment="Left">
                            <cc:AnimatedTextBlock.RenderTransform>
                                <CompositeTransform/>
                            </cc:AnimatedTextBlock.RenderTransform>
                        </cc:AnimatedTextBlock>
                        <ProgressRing x:Name="ProgressRing" Visibility="{x:Bind MainVM.IsLoading,Mode=OneWay}" IsActive="True" Foreground="Black" HorizontalAlignment="Left" Margin="10,0,0,0">
                            <ProgressRing.RenderTransform>
                                <CompositeTransform/>
                            </ProgressRing.RenderTransform>
                        </ProgressRing>
                    </StackPanel>
                </Grid>
            </Grid>
            <uc:LiveTileTemplate x:Name="TileControl" Grid.Row="1" HorizontalAlignment="Right"/>
            <Grid x:Name="ListContentGrid" Grid.Row="1" Background="White">
                <Grid x:Name="ListGrid">
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <Pivot Margin="0,0,0,0" x:Name="pivot" SelectedIndex="{x:Bind MainVM.SelectedPage,Mode=TwoWay}" IsLocked="True" Background="White">
                        <Pivot.RenderTransform>
                            <CompositeTransform/>
                        </Pivot.RenderTransform>
                        <PivotItem Margin="0,-50,0,0" >
                            <Grid>
                                <ListView x:Name="DisplayedListView" Grid.Row="1"
				                    ItemTemplate="{StaticResource ScheduleTemplete}"
				                    ItemsSource="{x:Bind MainVM.CurrentDisplayToDos,Mode=OneWay}" 
				                    ItemContainerStyle="{StaticResource ListViewItemStyle1}" 
				                    MaxWidth="750"  
                                    SelectionMode="None" 
                                    Margin="0,20,0,50"
                                    CanReorderItems="False"
                                    AllowDrop="False"
                                    CanDragItems="False"
                                    IsItemClickEnabled="True"
                                    attach:ScrollViewerStyleChanger.Style="{StaticResource ScrollViewerCommonStyle}"
                                    attach:ListViewBaseCommandEx.ItemClickCommand="{x:Bind MainVM.ModifyCommand}"
                                     />
                                <StackPanel x:Name="stackPanel1" Orientation="Vertical"  Visibility="{x:Bind MainVM.ShowNoItems,Mode=OneWay}" Grid.RowSpan="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,100">
                                    <TextBlock x:Uid="WorkDoneTB" HorizontalAlignment="Center" TextWrapping="Wrap" Text="WORK DONE" VerticalAlignment="Center" Foreground="#FFADADAD" FontSize="26.667" Grid.Row="1" FontWeight="Light" FontFamily="{StaticResource MyerListThemeFontFamily}"/>
                                    <TextBlock x:Uid="EnjoyTB" HorizontalAlignment="Center" TextWrapping="Wrap" Text="Enjoy your day ;-)" VerticalAlignment="Center" Foreground="#FFADADAD" FontSize="26.667" Grid.Row="1" FontWeight="Light" FontFamily="{StaticResource MyerListThemeFontFamily}"/>
                                </StackPanel>
                            </Grid>
                        </PivotItem>
                        <PivotItem Margin="0,-50,0,0">
                            <Grid>
                                <ListView
                                    x:Name="DeleteListView"
                                    ItemContainerStyle="{StaticResource ListViewItemStyle1}"
                                    ItemsSource="{x:Bind MainVM.DeletedToDos,Mode=OneWay}"
                                    ItemTemplate="{StaticResource DeletedTemplete}"
                                    CanReorderItems="False"
                                    AllowDrop="False"
                                    CanDragItems="False"
                                    MaxWidth="450"  
                                    attach:ScrollViewerStyleChanger.Style="{StaticResource ScrollViewerCommonStyle}"
                                    SelectionMode="None" BorderThickness="10,0" Margin="0,30,0,50">
                                </ListView>
                                <StackPanel Orientation="Vertical" Visibility="{x:Bind MainVM.NoDeletedItemsVisibility,Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="0,0,0,100">
                                    <TextBlock x:Uid="NoDeletedTB" Text="NoDeleted" Foreground="{StaticResource MyerListDark}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26.667" FontFamily="{StaticResource MyerListThemeFontFamily}" Opacity="0.8" FontWeight="Light"/>
                                    <TextBlock x:Uid="DeletedHintTB" Text="Deleted items will be showed up here" Foreground="{StaticResource MyerListDark}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontFamily="{StaticResource MyerListThemeFontFamily}" Opacity="0.8" FontWeight="Light" TextTrimming="WordEllipsis" TextWrapping="Wrap" TextAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </PivotItem>
                    </Pivot>
                </Grid>
            </Grid>
            <Grid x:Name="DefaultCommandBar" VerticalAlignment="Bottom" Grid.RowSpan="5" RenderTransformOrigin="0.5,0.5">
                <Grid.Background>
                    <SolidColorBrush Color="{StaticResource CommandBarGrey}"/>
                </Grid.Background>
                <Grid.RenderTransform>
                    <CompositeTransform/>
                </Grid.RenderTransform>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <Button Width="60" Height="50" Style="{StaticResource ListButtonStyle}" Command="{x:Bind MainVM.AddCommand}">
                        <SymbolIcon Symbol="Add"/>
                    </Button>
                    <Button Width="60" Height="50" Style="{StaticResource ListButtonStyle}" Command="{x:Bind MainVM.SyncCommand}">
                        <SymbolIcon Symbol="Sync"/>
                    </Button>
                    <ToggleButton
                        Width="60" Height="50"
                        BorderThickness="0"
                        Background="#0AFFFFFF"
                        Visibility="{x:Bind MainVM.ShowSortButton,Mode=OneWay}" 
                        IsChecked="{x:Bind MainVM.IsInSortMode,Mode=TwoWay}" 
                        Command="{x:Bind MainVM.ToggleReorderCommand}">
                        <SymbolIcon Symbol="Sort"/>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            <Grid x:Name="DeleteCommandBar" VerticalAlignment="Bottom" Grid.RowSpan="5" RenderTransformOrigin="0.5,0.5">
                <Grid.Background>
                    <SolidColorBrush Color="{StaticResource CommandBarGrey}"/>
                </Grid.Background>
                <Grid.RenderTransform>
                    <CompositeTransform TranslateY="90"/>
                </Grid.RenderTransform>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <Button Width="60" Height="50" Style="{StaticResource ListButtonStyle}" Command="{x:Bind MainVM.DeteteAllCommand}">
                        <SymbolIcon Symbol="Delete"/>
                    </Button>
                </StackPanel>

            </Grid>
            <Border x:Name="MaskBorder" Margin="0 -30 0 0" Tapped="MaskBorder_Tapped" Visibility="Collapsed" Opacity="0.8" Grid.RowSpan="5" Background="Black"/>
        </Grid>
        <Grid x:Name="TouchGrid" Grid.RowSpan="5" Width="20" ManipulationMode="TranslateX" ManipulationStarted="Grid_ManipulationStarted" ManipulationDelta="Grid_ManipulationDelta" ManipulationCompleted="TouchGrid_ManipulationCompleted" Background="White" Opacity="0.00001" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
        <uc:AddingPanel x:Name="AddingPanel" 
                        Margin="0 -30 0 0" 
                        Visibility="Visible" 
                        Opacity="0" 
                        Background="{StaticResource MyerListBlueLight}" 
                        Grid.RowSpan="5" 
                        VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5">
            <uc:AddingPanel.RenderTransform>
                <CompositeTransform TranslateX="-3000"/>
            </uc:AddingPanel.RenderTransform>
        </uc:AddingPanel>
        <uc:NavigationDrawer x:Name="Drawer" Width="250" Margin="0 -30 0 0" Grid.RowSpan="5" HorizontalAlignment="Left" Background="{StaticResource MyerListBlueLight}" RenderTransformOrigin="0.5,0.5">
            <uc:NavigationDrawer.RenderTransform>
                <CompositeTransform x:Name="DrawerTransform" TranslateX="-260"/>
            </uc:NavigationDrawer.RenderTransform>
        </uc:NavigationDrawer>

        <Grid x:Name="FeatureGrid" Visibility="Collapsed">
            <Border Background="#E1000000"/>
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Image Source="ms-appx:///Assets/feature1.png" HorizontalAlignment="Center" MaxWidth="400" Stretch="UniformToFill" VerticalAlignment="Center"/>
                <Button x:Name="OKBtn" Click="OKBtn_Click" Opacity="0.8" HorizontalAlignment="Stretch" Style="{StaticResource ButtonCommonStyle}" Height="40" MaxWidth="400" VerticalAlignment="Bottom" Margin="10">
                    <Border Background="#85000000" BorderThickness="0">
                        <TextBlock x:Uid="KnownItTB" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</base:BindablePage>
